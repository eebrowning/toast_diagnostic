//clientData->PostMan credentials > need to find out how to obtain programmatically from Toast.
//accessToken ->obtained by getAuth w/ clientData
const [clientId,clientSecret, guid] = require('../keys');//put your own in an .env and it will pull from there-> see keys.js && dotenv package
//would need clientSecret and clientId provided by user


const clientData = {
    "clientId": clientId,
    "clientSecret": clientSecret,
    "userAccessType": "TOAST_MACHINE_CLIENT"
}

/*_______*/
// let cookie;
let axToken;//
const getAuth=async ()=>{
  let data= await fetch(`https://ws-api.toasttab.com/authentication/v1/authentication/login`, {
        headers:{ 
            'Accept': 'application/json',
            'Content-Type': 'application/json' 
        },
        method: 'POST',
        body: JSON.stringify(clientData)
    })
    //consider helper function to re-fresh token automatically, or just as a button for an app
    let token= await data.json();
    // console.log(token)
    token= token.token;
    axToken=token.accessToken;
    return;


}


//this doesn't work yet-> 'full auth req to access this resource'-> not passing headers along.
function fetchDataWithToken(guid, accessToken) {
    const url = `https://ws-api.toasttab.com/restaurants/v1/restaurants/${guid}`;
    // const url= `https://ws-api.toasttab.com/menus/v2/menus`;
    const headers = {
        'Accept': 'application/json',
        'Content-Type': 'application/json',
        'Authorization': `Bearer ${accessToken}`,
        'Toast-Restaurant-External-Id': `${guid}`

    };
    // const body = JSON.stringify({ guid: guid });
    return fetch(url, {
        method: 'GET',
        headers: headers
    })
    .then(response => {
        if (!response.ok) {
            console.log(response, 'res')
        }
        return response.json();
    })
    .then(data => {
        console.log('Data received:', data);

        // Process the data further as needed
        return data;
    })
}

getAuth().then(()=>fetchDataWithToken(guid, axToken));
// fetchDataWithToken(guid, axToken);


